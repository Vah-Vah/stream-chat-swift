{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelController"},{"kind":"text","text":"("},{"kind":"externalParam","text":"createDirectMessageChannelWith"},{"kind":"text","text":" "},{"kind":"internalParam","text":"members"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/UserId","preciseIdentifier":"s:10StreamChat6UserIda","text":"UserId"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChannelType","preciseIdentifier":"s:10StreamChat11ChannelTypeO","text":"ChannelType"},{"kind":"text","text":" = .messaging, "},{"kind":"externalParam","text":"isCurrentUserMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"messageOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/MessageOrdering","preciseIdentifier":"s:10StreamChat15MessageOrderingO","text":"MessageOrdering"},{"kind":"text","text":" = .topToBottom, "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"imageURL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"team"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"extraData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/RawJSON","preciseIdentifier":"s:10StreamChat7RawJSONO","text":"RawJSON"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"channelListQuery"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChannelListQuery","preciseIdentifier":"s:10StreamChat16ChannelListQueryV","text":"ChannelListQuery"},{"kind":"text","text":"? = nil) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChatChannelController","preciseIdentifier":"s:10StreamChat0B17ChannelControllerC","text":"ChatChannelController"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A new instance of "},{"type":"codeVoice","code":"ChatChannelController"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"members","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Members for the new channel. Must not be empty."}]}]},{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The type of the channel."}]}]},{"name":"isCurrentUserMember","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If set to "},{"type":"codeVoice","code":"true"},{"type":"text","text":" the current user will be included into the channel. Is "},{"type":"codeVoice","code":"true"},{"type":"text","text":" by default."}]}]},{"name":"messageOrdering","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Describes the ordering the messages are presented."}]}]},{"name":"name","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new channel name."}]}]},{"name":"imageURL","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new channel avatar URL."}]}]},{"name":"team","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Team for the new channel."}]}]},{"name":"extraData","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Extra data for the new channel."}]}]},{"name":"channelListQuery","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The channel list query the channel this controller represents is part of."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It’s safe to call this method for already existing channels. However, if you queried the channel before and you’re sure it exists locally,"},{"type":"text","text":" "},{"type":"text","text":"it can be faster and more convenient to use "},{"type":"codeVoice","code":"channelController(for cid: ChannelId)"},{"type":"text","text":" to create a controller for it."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/streamchat\/chatclient\/channelcontroller(createdirectmessagechannelwith:type:iscurrentusermember:messageordering:name:imageurl:team:extradata:channellistquery:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChatClient\/channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"ChatChannelController"},{"type":"text","text":" that will create a new channel with the provided members without having to specify"},{"type":"text","text":" "},{"type":"text","text":"the channel id explicitly. This is great for direct message channels because the channel should be uniquely identified by"},{"type":"text","text":" "},{"type":"text","text":"its members. If the channel for these members already exist, it will be reused."}],"kind":"symbol","metadata":{"role":"symbol","title":"channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelController"},{"kind":"text","text":"("},{"kind":"externalParam","text":"createDirectMessageChannelWith"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserId","preciseIdentifier":"s:10StreamChat6UserIda"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelType","preciseIdentifier":"s:10StreamChat11ChannelTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"isCurrentUserMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"messageOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MessageOrdering","preciseIdentifier":"s:10StreamChat15MessageOrderingO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"imageURL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"team"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"extraData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RawJSON","preciseIdentifier":"s:10StreamChat7RawJSONO"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"channelListQuery"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelListQuery","preciseIdentifier":"s:10StreamChat16ChannelListQueryV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ChatChannelController","preciseIdentifier":"s:10StreamChat0B17ChannelControllerC"}],"symbolKind":"method","externalID":"s:10StreamChat0B6ClientC17channelController30createDirectMessageChannelWith4type19isCurrentUserMember15messageOrdering4name8imageURL4team9extraData0D9ListQueryAA0biE0CShySSG_AA0I4TypeOSbAA0hQ0OSSSg10Foundation0T0VSgAUSDySSAA7RawJSONOGAA0ixY0VSgtKF","extendedModule":"StreamChat","modules":[{"name":"StreamChat"}]},"hierarchy":{"paths":[["doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat","doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChatClient"]]},"references":{"doc://getstream.github.io.StreamChat/documentation/StreamChat/ChatChannelController":{"role":"symbol","title":"ChatChannelController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChatChannelController"}],"abstract":[{"type":"codeVoice","code":"ChatChannelController"},{"type":"text","text":" is a controller class which allows mutating and observing changes of a specific chat channel."}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChatChannelController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChatChannelController"}],"url":"\/documentation\/streamchat\/chatchannelcontroller"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/ChannelType":{"role":"symbol","title":"ChannelType","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelType"}],"abstract":[{"type":"text","text":"An enum describing possible types of a channel."}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChannelType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelType"}],"url":"\/documentation\/streamchat\/channeltype"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/ChatClient":{"role":"symbol","title":"ChatClient","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChatClient"}],"abstract":[{"type":"text","text":"The root object representing a Stream Chat."}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChatClient","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChatClient"}],"url":"\/documentation\/streamchat\/chatclient"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/RawJSON":{"role":"symbol","title":"RawJSON","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"RawJSON"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RawJSON"},{"type":"text","text":" type."},{"type":"text","text":" "},{"type":"text","text":"Used to store and operate objects of unknown structure that’s not possible to decode."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/new-unevaluated-type-for-decoder-to-allow-later-re-encoding-of-data-with-unknown-structure\/11117"}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/RawJSON","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RawJSON"}],"url":"\/documentation\/streamchat\/rawjson"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/UserId":{"role":"symbol","title":"UserId","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"UserId"}],"abstract":[{"type":"text","text":"A unique identifier of a user."}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/UserId","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UserId"}],"url":"\/documentation\/streamchat\/userid"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/ChatClient/channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)":{"role":"symbol","title":"channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelController"},{"kind":"text","text":"("},{"kind":"externalParam","text":"createDirectMessageChannelWith"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UserId","preciseIdentifier":"s:10StreamChat6UserIda"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelType","preciseIdentifier":"s:10StreamChat11ChannelTypeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"isCurrentUserMember"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"messageOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MessageOrdering","preciseIdentifier":"s:10StreamChat15MessageOrderingO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"imageURL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"team"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"extraData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RawJSON","preciseIdentifier":"s:10StreamChat7RawJSONO"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"channelListQuery"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelListQuery","preciseIdentifier":"s:10StreamChat16ChannelListQueryV"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"ChatChannelController","preciseIdentifier":"s:10StreamChat0B17ChannelControllerC"}],"abstract":[{"type":"text","text":"Creates a "},{"type":"codeVoice","code":"ChatChannelController"},{"type":"text","text":" that will create a new channel with the provided members without having to specify"},{"type":"text","text":" "},{"type":"text","text":"the channel id explicitly. This is great for direct message channels because the channel should be uniquely identified by"},{"type":"text","text":" "},{"type":"text","text":"its members. If the channel for these members already exist, it will be reused."}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChatClient\/channelController(createDirectMessageChannelWith:type:isCurrentUserMember:messageOrdering:name:imageURL:team:extraData:channelListQuery:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/chatclient\/channelcontroller(createdirectmessagechannelwith:type:iscurrentusermember:messageordering:name:imageurl:team:extradata:channellistquery:)"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/ChannelListQuery":{"role":"symbol","title":"ChannelListQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelListQuery"}],"abstract":[{"type":"text","text":"A query is used for querying specific channels from backend."},{"type":"text","text":" "},{"type":"text","text":"You can specify filter, sorting, pagination, limit for fetched messages in channel and other options."}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/ChannelListQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelListQuery"}],"url":"\/documentation\/streamchat\/channellistquery"},"doc://getstream.github.io.StreamChat/documentation/StreamChat/MessageOrdering":{"role":"symbol","title":"MessageOrdering","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MessageOrdering"}],"abstract":[{"type":"text","text":"Describes the flow of the messages in the list"}],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat\/MessageOrdering","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MessageOrdering"}],"url":"\/documentation\/streamchat\/messageordering"},"doc://getstream.github.io.StreamChat/documentation/StreamChat":{"role":"collection","title":"StreamChat","abstract":[],"identifier":"doc:\/\/getstream.github.io.StreamChat\/documentation\/StreamChat","kind":"symbol","type":"topic","url":"\/documentation\/streamchat"}}}