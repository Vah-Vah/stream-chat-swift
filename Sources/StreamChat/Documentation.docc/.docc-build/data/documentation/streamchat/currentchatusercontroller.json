{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentChatUserController"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/streamchat\/currentchatusercontroller"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/DataController"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/Controller","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/DataStoreProvider"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController","interfaceLanguage":"swift"},"abstract":[{"type":"codeVoice","code":"CurrentChatUserController"},{"type":"text","text":" is a controller class which allows observing and mutating the currently logged-in"},{"type":"text","text":" "},{"type":"text","text":"user of "},{"type":"codeVoice","code":"ChatClient"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentChatUserController"}],"title":"CurrentChatUserController","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:10StreamChat07CurrentB14UserControllerC","modules":[{"name":"StreamChat"}],"navigatorTitle":[{"kind":"identifier","text":"CurrentChatUserController"}]},"hierarchy":{"paths":[["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat"]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class"]},{"title":"Instance Properties","identifiers":["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/client","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUser","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUserChangePublisher","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/delegate","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/observableObject-swift.property","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCount","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCountPublisher"]},{"title":"Instance Methods","identifiers":["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/addDevice(token:pushProvider:completion:)","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/reloadUserIfNeeded(completion:)","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/removeDevice(id:completion:)","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronize(_:)","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronizeDevices(completion:)","doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/updateUserData(name:imageURL:userExtraData:completion:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/DataStoreProvider-Implementations"],"generated":true}],"references":{"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/currentUserChangePublisher":{"role":"symbol","title":"currentUserChangePublisher","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentUserChangePublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"EntityChange","preciseIdentifier":"s:10StreamChat12EntityChangeO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"CurrentChatUser","preciseIdentifier":"s:10StreamChat07CurrentB4UserC"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A publisher emitting a new value every time the current user changes."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUserChangePublisher","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/currentuserchangepublisher"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/synchronizeDevices(completion:)":{"role":"symbol","title":"synchronizeDevices(completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"synchronizeDevices"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Fetches the most updated devices and syncs with the local database."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronizeDevices(completion:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/synchronizedevices(completion:)"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/DataStoreProvider":{"role":"symbol","title":"DataStoreProvider","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataStoreProvider"}],"abstract":[{"type":"text","text":"Types conforming to this protocol automatically exposes public "},{"type":"codeVoice","code":"dataStore"},{"type":"text","text":" variable."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/DataStoreProvider","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataStoreProvider"}],"url":"\/documentation\/streamchat\/datastoreprovider"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/unreadCountPublisher":{"role":"symbol","title":"unreadCountPublisher","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unreadCountPublisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyPublisher","preciseIdentifier":"s:7Combine12AnyPublisherV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UnreadCount","preciseIdentifier":"s:10StreamChat11UnreadCountV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"A publisher emitting a new value every time the unread count changes.."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCountPublisher","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/unreadcountpublisher"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/removeDevice(id:completion:)":{"role":"symbol","title":"removeDevice(id:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeDevice"},{"kind":"text","text":"("},{"kind":"externalParam","text":"id"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Removes a registered device from the current user."},{"type":"text","text":" "},{"type":"codeVoice","code":"connectUser"},{"type":"text","text":" must be called before calling this."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/removeDevice(id:completion:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/removedevice(id:completion:)"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/delegate":{"role":"symbol","title":"delegate","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CurrentChatUserControllerDelegate","preciseIdentifier":"s:10StreamChat07CurrentB22UserControllerDelegateP"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Set the delegate of "},{"type":"codeVoice","code":"CurrentUserController"},{"type":"text","text":" to observe the changes in the system."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/delegate","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/delegate"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/client":{"role":"symbol","title":"client","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"client"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChatClient","preciseIdentifier":"s:10StreamChat0B6ClientC"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChatClient"},{"type":"text","text":" instance this controller belongs to."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/client","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/client"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/observableObject-swift.property":{"role":"symbol","title":"observableObject","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"observableObject"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ObservableObject","preciseIdentifier":"s:10StreamChat07CurrentB14UserControllerC16ObservableObjectC"}],"abstract":[{"type":"text","text":"A wrapper object that exposes the controller variables in the form of "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" to be used in SwiftUI."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/observableObject-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/observableobject-swift.property"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/reloadUserIfNeeded(completion:)":{"role":"symbol","title":"reloadUserIfNeeded(completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reloadUserIfNeeded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Fetches the token from "},{"type":"codeVoice","code":"tokenProvider"},{"type":"text","text":" and prepares the current "},{"type":"codeVoice","code":"ChatClient"},{"type":"text","text":" variables"},{"type":"text","text":" "},{"type":"text","text":"for the new user."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/reloadUserIfNeeded(completion:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/reloaduserifneeded(completion:)"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/ObservableObject-swift.class":{"role":"symbol","title":"CurrentChatUserController.ObservableObject","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ObservableObject"}],"abstract":[{"type":"text","text":"A wrapper object for "},{"type":"codeVoice","code":"CurrentUserController"},{"type":"text","text":" type which makes it possible to use the controller comfortably in SwiftUI."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ObservableObject"}],"url":"\/documentation\/streamchat\/currentchatusercontroller\/observableobject-swift.class"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/synchronize(_:)":{"role":"symbol","title":"synchronize(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"synchronize"},{"kind":"text","text":"((("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Synchronize local data with remote. Waits for the client to connect but doesn’t initiate the connection itself."},{"type":"text","text":" "},{"type":"text","text":"This is to make sure the fetched local data is up-to-date, since the current user data is updated through WebSocket events."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronize(_:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/synchronize(_:)"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/DataController":{"role":"symbol","title":"DataController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataController"}],"abstract":[{"type":"text","text":"The base class for controllers which represent and control a data entity. Not meant to be used directly."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/DataController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataController"}],"url":"\/documentation\/streamchat\/datacontroller"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/unreadCount":{"role":"symbol","title":"unreadCount","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unreadCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnreadCount","preciseIdentifier":"s:10StreamChat11UnreadCountV"}],"abstract":[{"type":"text","text":"The unread messages and channels count for the current user."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCount","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/unreadcount"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/DataStoreProvider-Implementations":{"role":"collectionGroup","title":"DataStoreProvider Implementations","abstract":[],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/DataStoreProvider-Implementations","kind":"article","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/datastoreprovider-implementations"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/updateUserData(name:imageURL:userExtraData:completion:)":{"role":"symbol","title":"updateUserData(name:imageURL:userExtraData:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateUserData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"imageURL"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"URL","preciseIdentifier":"s:10Foundation3URLV"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"userExtraData"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RawJSON","preciseIdentifier":"s:10StreamChat7RawJSONO"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Updates the current user data."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/updateUserData(name:imageURL:userExtraData:completion:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/updateuserdata(name:imageurl:userextradata:completion:)"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/addDevice(token:pushProvider:completion:)":{"role":"symbol","title":"addDevice(token:pushProvider:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addDevice"},{"kind":"text","text":"("},{"kind":"externalParam","text":"token"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pushProvider"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"PushProvider","preciseIdentifier":"s:10StreamChat12PushProviderV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")?)"}],"abstract":[{"type":"text","text":"Registers a device to the current user."},{"type":"text","text":" "},{"type":"codeVoice","code":"connectUser"},{"type":"text","text":" must be called before calling this."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/addDevice(token:pushProvider:completion:)","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/adddevice(token:pushprovider:completion:)"},"doc://com.github.heckj.StreamChat/documentation/StreamChat":{"role":"collection","title":"StreamChat","abstract":[],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat","kind":"symbol","type":"topic","url":"\/documentation\/streamchat"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/Controller":{"role":"symbol","title":"Controller","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Controller"}],"abstract":[{"type":"text","text":"A protocol to which all controllers conform to."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/Controller","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Controller"}],"url":"\/documentation\/streamchat\/controller"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController/currentUser":{"role":"symbol","title":"currentUser","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentUser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CurrentChatUser","preciseIdentifier":"s:10StreamChat07CurrentB4UserC"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The currently logged-in user. "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the connection hasn’t been fully established yet, or the connection"},{"type":"text","text":" "},{"type":"text","text":"wasn’t successful."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUser","kind":"symbol","type":"topic","url":"\/documentation\/streamchat\/currentchatusercontroller\/currentuser"},"doc://com.github.heckj.StreamChat/documentation/StreamChat/CurrentChatUserController":{"role":"symbol","title":"CurrentChatUserController","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"CurrentChatUserController"}],"abstract":[{"type":"codeVoice","code":"CurrentChatUserController"},{"type":"text","text":" is a controller class which allows observing and mutating the currently logged-in"},{"type":"text","text":" "},{"type":"text","text":"user of "},{"type":"codeVoice","code":"ChatClient"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.github.heckj.StreamChat\/documentation\/StreamChat\/CurrentChatUserController","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CurrentChatUserController"}],"url":"\/documentation\/streamchat\/currentchatusercontroller"}}}