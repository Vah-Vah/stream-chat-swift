{
  "abstract" : [
    {
      "text" : "An enum describing possible types of a channel.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat11ChannelTypeO",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "enum"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ChannelType"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ChannelType"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Enumeration",
    "symbolKind" : "enum",
    "title" : "ChannelType"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "enum"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ChannelType"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/FilterValue",
        "doc:\/\/StreamChat\/Se",
        "doc:\/\/StreamChat\/SE",
        "doc:\/\/StreamChat\/SQ",
        "doc:\/\/StreamChat\/SH"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/commerce",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/custom(_:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/gaming",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/livestream",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/messaging",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/team"
      ],
      "title" : "Enumeration Cases"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/init(from:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/rawValue",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/title"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/encode(to:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/channeltype"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/SE": {
  "identifier" : "doc:\/\/StreamChat\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://StreamChat/SH": {
  "identifier" : "doc:\/\/StreamChat\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://StreamChat/SQ": {
  "identifier" : "doc:\/\/StreamChat\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://StreamChat/Se": {
  "identifier" : "doc:\/\/StreamChat\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/ChannelType": {
  "abstract" : [
    {
      "text" : "An enum describing possible types of a channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "enum"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelType"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelType"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelType",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/equatable-implementations"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/commerce": {
  "abstract" : [
    {
      "text" : "Good defaults for building something like your own version of Intercom or Drift.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "commerce"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/commerce",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ChannelType.commerce",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/commerce"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/custom(_:)": {
  "abstract" : [
    {
      "text" : "The type of the channel is custom.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "custom"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/custom(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ChannelType.custom(_:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/custom(_:)"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/encode(to:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "encode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "to"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7EncoderP",
      "text" : "Encoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/encode(to:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "encode(to:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/encode(to:)"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/gaming": {
  "abstract" : [
    {
      "text" : "Good defaults for building something like your own version of Twitch.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "gaming"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/gaming",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ChannelType.gaming",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/gaming"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/init(from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/init(from:)"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/livestream": {
  "abstract" : [
    {
      "text" : "Sensible defaults in case you want to build livestream chat like Instagram Livestream or Periscope.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "livestream"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/livestream",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ChannelType.livestream",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/livestream"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/messaging": {
  "abstract" : [
    {
      "text" : "Configured for apps such as WhatsApp or Facebook Messenger.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "messaging"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/messaging",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ChannelType.messaging",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/messaging"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/rawValue": {
  "abstract" : [
    {
      "text" : "A raw value of the channel type.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/rawValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rawValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/rawvalue"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/team": {
  "abstract" : [
    {
      "text" : "If you want to build your own version of Slack or something similar, start here.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "case"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "team"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/team",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "ChannelType.team",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/team"
},
"doc://StreamChat/documentation/StreamChat/ChannelType/title": {
  "abstract" : [
    {
      "text" : "A channel type title.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "title"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelType\/title",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "title",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channeltype\/title"
},
"doc://StreamChat/documentation/StreamChat/FilterValue": {
  "abstract" : [
    {
      "text" : "A protocol to which all values that can be used as ",
      "type" : "text"
    },
    {
      "code" : "Filter",
      "type" : "codeVoice"
    },
    {
      "text" : " values conform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FilterValue"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/FilterValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FilterValue"
    }
  ],
  "role" : "symbol",
  "title" : "FilterValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filtervalue"
}
}
}