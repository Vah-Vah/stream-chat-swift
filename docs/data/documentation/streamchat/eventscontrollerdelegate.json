{
  "abstract" : [
    {
      "code" : "EventsController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate events to the delegate.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/EventsControllerDelegate"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat24EventsControllerDelegateP",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "protocol"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "EventsControllerDelegate"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "EventsControllerDelegate"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Protocol",
    "symbolKind" : "protocol",
    "title" : "EventsControllerDelegate"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "protocol"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "EventsControllerDelegate"
            },
            {
              "kind" : "text",
              "text" : " : AnyObject"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class"
      ],
      "kind" : "relationships",
      "title" : "Conforming Types",
      "type" : "conformingTypes"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/EventsControllerDelegate\/eventsController(_:didReceiveEvent:)"
      ],
      "title" : "Instance Methods"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/eventscontrollerdelegate"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/EventsController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "UserListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/EventsController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "EventsController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/eventscontroller\/observableobject-swift.class"
},
"doc://StreamChat/documentation/StreamChat/EventsControllerDelegate": {
  "abstract" : [
    {
      "code" : "EventsController",
      "type" : "codeVoice"
    },
    {
      "text" : " uses this protocol to communicate events to the delegate.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "EventsControllerDelegate"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/EventsControllerDelegate",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "EventsControllerDelegate"
    }
  ],
  "role" : "symbol",
  "title" : "EventsControllerDelegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/eventscontrollerdelegate"
},
"doc://StreamChat/documentation/StreamChat/EventsControllerDelegate/eventsController(_:didReceiveEvent:)": {
  "abstract" : [
    {
      "text" : "The method is invoked when an event is observed.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eventsController"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat16EventsControllerC",
      "text" : "EventsController"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "didReceiveEvent"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat5EventP",
      "text" : "Event"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/EventsControllerDelegate\/eventsController(_:didReceiveEvent:)",
  "kind" : "symbol",
  "required" : true,
  "role" : "symbol",
  "title" : "eventsController(_:didReceiveEvent:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/eventscontrollerdelegate\/eventscontroller(_:didreceiveevent:)"
}
}
}