{
  "abstract" : [
    {
      "code" : "ChatConnectionController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows to explicitly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "connect\/disconnect the ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " and observe connection events.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat0B20ConnectionControllerC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ChatConnectionController"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ChatConnectionController"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "ChatConnectionController"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ChatConnectionController"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Controller",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/DataStoreProvider"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/callbackQueue",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/client",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connectionStatus",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connectionStatusPublisher",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/delegate",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/observableObject-swift.property"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connect(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/disconnect()"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/DataStoreProvider-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/chatconnectioncontroller"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController": {
  "abstract" : [
    {
      "code" : "ChatConnectionController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows to explicitly",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "connect\/disconnect the ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " and observe connection events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatConnectionController"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatConnectionController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatConnectionController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/DataStoreProvider-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/DataStoreProvider-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "DataStoreProvider Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/datastoreprovider-implementations"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "CurrentUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatConnectionController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/observableobject-swift.class"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/callbackQueue": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "callbackQueue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "c:objc(cs)OS_dispatch_queue",
      "text" : "DispatchQueue"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/callbackQueue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "callbackQueue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/callbackqueue"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/client": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " instance this controller belongs to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "client"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B6ClientC",
      "text" : "ChatClient"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/client",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "client",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/client"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/connect(completion:)": {
  "abstract" : [
    {
      "text" : "Connects the chat client the controller represents to the chat servers.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "connect"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connect(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "connect(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/connect(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/connectionStatus": {
  "abstract" : [
    {
      "text" : "The current connection status of the client.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "connectionStatus"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat16ConnectionStatusO",
      "text" : "ConnectionStatus"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connectionStatus",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "connectionStatus",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/connectionstatus"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/connectionStatusPublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time the connection status changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "connectionStatusPublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat16ConnectionStatusO",
      "text" : "ConnectionStatus"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/connectionStatusPublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "connectionStatusPublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/connectionstatuspublisher"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/delegate": {
  "abstract" : [
    {
      "text" : "Set the delegate of ",
      "type" : "text"
    },
    {
      "code" : "ChatConnectionController",
      "type" : "codeVoice"
    },
    {
      "text" : " to observe the changes in the system.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delegate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B28ConnectionControllerDelegateP",
      "text" : "ChatConnectionControllerDelegate"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/delegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "delegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/delegate"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/disconnect()": {
  "abstract" : [
    {
      "text" : "Disconnects the chat client the controller represents from the chat servers.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "No further updates from the servers are received.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "disconnect"
    },
    {
      "kind" : "text",
      "text" : "()"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/disconnect()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "disconnect()",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/disconnect()"
},
"doc://StreamChat/documentation/StreamChat/ChatConnectionController/observableObject-swift.property": {
  "abstract" : [
    {
      "text" : "A wrapper object that exposes the controller variables in the form of ",
      "type" : "text"
    },
    {
      "code" : "ObservableObject",
      "type" : "codeVoice"
    },
    {
      "text" : " to be used in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "observableObject"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B20ConnectionControllerC",
      "text" : "ChatConnectionController"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B20ConnectionControllerC16ObservableObjectC",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatConnectionController\/observableObject-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "observableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatconnectioncontroller\/observableobject-swift.property"
},
"doc://StreamChat/documentation/StreamChat/Controller": {
  "abstract" : [
    {
      "text" : "A protocol to which all controllers conform to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Controller",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "role" : "symbol",
  "title" : "Controller",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/controller"
},
"doc://StreamChat/documentation/StreamChat/DataStoreProvider": {
  "abstract" : [
    {
      "text" : "Types conforming to this protocol automatically exposes public ",
      "type" : "text"
    },
    {
      "code" : "dataStore",
      "type" : "codeVoice"
    },
    {
      "text" : " variable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/DataStoreProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "role" : "symbol",
  "title" : "DataStoreProvider",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datastoreprovider"
}
}
}