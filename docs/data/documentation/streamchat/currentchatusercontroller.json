{
  "abstract" : [
    {
      "code" : "CurrentChatUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing and mutating the currently logged-in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "user of ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat07CurrentB14UserControllerC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "CurrentChatUserController"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "CurrentChatUserController"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "CurrentChatUserController"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "CurrentChatUserController"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/DataController"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Controller",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/DataStoreProvider"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/client",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUser",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUserChangePublisher",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/delegate",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/observableObject-swift.property",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCount",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCountPublisher"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/addDevice(token:pushProvider:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/reloadUserIfNeeded(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/removeDevice(id:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronize(_:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronizeDevices(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/updateUserData(name:imageURL:userExtraData:completion:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/DataStoreProvider-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/currentchatusercontroller"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/Controller": {
  "abstract" : [
    {
      "text" : "A protocol to which all controllers conform to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Controller",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "role" : "symbol",
  "title" : "Controller",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/controller"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController": {
  "abstract" : [
    {
      "code" : "CurrentChatUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows observing and mutating the currently logged-in",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "user of ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "CurrentChatUserController"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "CurrentChatUserController"
    }
  ],
  "role" : "symbol",
  "title" : "CurrentChatUserController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/DataStoreProvider-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/DataStoreProvider-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "DataStoreProvider Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/datastoreprovider-implementations"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "CurrentUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "CurrentChatUserController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/observableobject-swift.class"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/addDevice(token:pushProvider:completion:)": {
  "abstract" : [
    {
      "text" : "Registers a device to the current user.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "connectUser",
      "type" : "codeVoice"
    },
    {
      "text" : " must be called before calling this.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "addDevice"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "token"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DataV",
      "text" : "Data"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pushProvider"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat12PushProviderV",
      "text" : "PushProvider"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/addDevice(token:pushProvider:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "addDevice(token:pushProvider:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/adddevice(token:pushprovider:completion:)"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/client": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " instance this controller belongs to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "client"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B6ClientC",
      "text" : "ChatClient"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/client",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "client",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/client"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/currentUser": {
  "abstract" : [
    {
      "text" : "The currently logged-in user. ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " if the connection hasn’t been fully established yet, or the connection",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "wasn’t successful.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentUser"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat07CurrentB4UserC",
      "text" : "CurrentChatUser"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUser",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentUser",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/currentuser"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/currentUserChangePublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time the current user changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "currentUserChangePublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat12EntityChangeO",
      "text" : "EntityChange"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat07CurrentB4UserC",
      "text" : "CurrentChatUser"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/currentUserChangePublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "currentUserChangePublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/currentuserchangepublisher"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/delegate": {
  "abstract" : [
    {
      "text" : "Set the delegate of ",
      "type" : "text"
    },
    {
      "code" : "CurrentUserController",
      "type" : "codeVoice"
    },
    {
      "text" : " to observe the changes in the system.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delegate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat07CurrentB22UserControllerDelegateP",
      "text" : "CurrentChatUserControllerDelegate"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/delegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "delegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/delegate"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/observableObject-swift.property": {
  "abstract" : [
    {
      "text" : "A wrapper object that exposes the controller variables in the form of ",
      "type" : "text"
    },
    {
      "code" : "ObservableObject",
      "type" : "codeVoice"
    },
    {
      "text" : " to be used in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "observableObject"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat07CurrentB14UserControllerC",
      "text" : "CurrentChatUserController"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat07CurrentB14UserControllerC16ObservableObjectC",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/observableObject-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "observableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/observableobject-swift.property"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/reloadUserIfNeeded(completion:)": {
  "abstract" : [
    {
      "text" : "Fetches the token from ",
      "type" : "text"
    },
    {
      "code" : "tokenProvider",
      "type" : "codeVoice"
    },
    {
      "text" : " and prepares the current ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " variables",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "for the new user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "reloadUserIfNeeded"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/reloadUserIfNeeded(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "reloadUserIfNeeded(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/reloaduserifneeded(completion:)"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/removeDevice(id:completion:)": {
  "abstract" : [
    {
      "text" : "Removes a registered device from the current user.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "code" : "connectUser",
      "type" : "codeVoice"
    },
    {
      "text" : " must be called before calling this.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeDevice"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/removeDevice(id:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeDevice(id:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/removedevice(id:completion:)"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/synchronize(_:)": {
  "abstract" : [
    {
      "text" : "Synchronize local data with remote. Waits for the client to connect but doesn’t initiate the connection itself.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "This is to make sure the fetched local data is up-to-date, since the current user data is updated through WebSocket events.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "synchronize"
    },
    {
      "kind" : "text",
      "text" : "((("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronize(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "synchronize(_:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/synchronize(_:)"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/synchronizeDevices(completion:)": {
  "abstract" : [
    {
      "text" : "Fetches the most updated devices and syncs with the local database.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "synchronizeDevices"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/synchronizeDevices(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "synchronizeDevices(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/synchronizedevices(completion:)"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/unreadCount": {
  "abstract" : [
    {
      "text" : "The unread messages and channels count for the current user.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unreadCount"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat11UnreadCountV",
      "text" : "UnreadCount"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCount",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unreadCount",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/unreadcount"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/unreadCountPublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time the unread count changes..",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unreadCountPublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat11UnreadCountV",
      "text" : "UnreadCount"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/unreadCountPublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unreadCountPublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/unreadcountpublisher"
},
"doc://StreamChat/documentation/StreamChat/CurrentChatUserController/updateUserData(name:imageURL:userExtraData:completion:)": {
  "abstract" : [
    {
      "text" : "Updates the current user data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateUserData"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "imageURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "userExtraData"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat7RawJSONO",
      "text" : "RawJSON"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/CurrentChatUserController\/updateUserData(name:imageURL:userExtraData:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "updateUserData(name:imageURL:userExtraData:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/currentchatusercontroller\/updateuserdata(name:imageurl:userextradata:completion:)"
},
"doc://StreamChat/documentation/StreamChat/DataController": {
  "abstract" : [
    {
      "text" : "The base class for controllers which represent and control a data entity. Not meant to be used directly.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataController"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/DataController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataController"
    }
  ],
  "role" : "symbol",
  "title" : "DataController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datacontroller"
},
"doc://StreamChat/documentation/StreamChat/DataStoreProvider": {
  "abstract" : [
    {
      "text" : "Types conforming to this protocol automatically exposes public ",
      "type" : "text"
    },
    {
      "code" : "dataStore",
      "type" : "codeVoice"
    },
    {
      "text" : " variable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/DataStoreProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "role" : "symbol",
  "title" : "DataStoreProvider",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datastoreprovider"
}
}
}