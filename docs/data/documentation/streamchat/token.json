{
  "abstract" : [
    {
      "text" : "The type is designed to store the JWT and the user it is related to.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat5TokenV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "Token"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "Token"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "Token"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "Token"
            }
          ]
        }
      ],
      "kind" : "declarations"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/Se",
        "doc:\/\/StreamChat\/SQ",
        "doc:\/\/StreamChat\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
        "doc:\/\/StreamChat\/s26ExpressibleByStringLiteralP",
        "doc:\/\/StreamChat\/s33ExpressibleByUnicodeScalarLiteralP"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/init(from:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/init(rawValue:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/init(stringLiteral:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/expiration",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/isExpired",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/rawValue",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/userId"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/anonymous"
      ],
      "title" : "Type Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/development(userId:)"
      ],
      "title" : "Type Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/Equatable-Implementations",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/ExpressibleByUnicodeScalarLiteral-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/token"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/SQ": {
  "identifier" : "doc:\/\/StreamChat\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://StreamChat/Se": {
  "identifier" : "doc:\/\/StreamChat\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/Token": {
  "abstract" : [
    {
      "text" : "The type is designed to store the JWT and the user it is related to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Token"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Token"
    }
  ],
  "role" : "symbol",
  "title" : "Token",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token"
},
"doc://StreamChat/documentation/StreamChat/Token/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/equatable-implementations"
},
"doc://StreamChat/documentation/StreamChat/Token/ExpressibleByExtendedGraphemeClusterLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/ExpressibleByExtendedGraphemeClusterLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByExtendedGraphemeClusterLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/expressiblebyextendedgraphemeclusterliteral-implementations"
},
"doc://StreamChat/documentation/StreamChat/Token/ExpressibleByUnicodeScalarLiteral-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/ExpressibleByUnicodeScalarLiteral-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "ExpressibleByUnicodeScalarLiteral Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/expressiblebyunicodescalarliteral-implementations"
},
"doc://StreamChat/documentation/StreamChat/Token/anonymous": {
  "abstract" : [
    {
      "text" : "The token that can be used when user is unknown.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "anonymous"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat5TokenV",
      "text" : "Token"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/anonymous",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "anonymous",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/anonymous"
},
"doc://StreamChat/documentation/StreamChat/Token/development(userId:)": {
  "abstract" : [
    {
      "text" : "The token which can be used during the development.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "static"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "development"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "userId"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat5TokenV",
      "text" : "Token"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/development(userId:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "development(userId:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/development(userid:)"
},
"doc://StreamChat/documentation/StreamChat/Token/expiration": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "expiration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation4DateV",
      "text" : "Date"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/expiration",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "expiration",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/expiration"
},
"doc://StreamChat/documentation/StreamChat/Token/init(from:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "from"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s7DecoderP",
      "text" : "Decoder"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/init(from:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(from:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/init(from:)"
},
"doc://StreamChat/documentation/StreamChat/Token/init(rawValue:)": {
  "abstract" : [
    {
      "text" : "Creates a ",
      "type" : "text"
    },
    {
      "code" : "Token",
      "type" : "codeVoice"
    },
    {
      "text" : " instance from the provided ",
      "type" : "text"
    },
    {
      "code" : "rawValue",
      "type" : "codeVoice"
    },
    {
      "text" : " if it’s valid.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/init(rawValue:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(rawValue:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/init(rawvalue:)"
},
"doc://StreamChat/documentation/StreamChat/Token/init(stringLiteral:)": {
  "abstract" : [
    {
      "text" : "Created a new ",
      "type" : "text"
    },
    {
      "code" : "Token",
      "type" : "codeVoice"
    },
    {
      "text" : " instance.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "stringLiteral"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s17StringLiteralTypea",
      "text" : "StringLiteralType"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/init(stringLiteral:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(stringLiteral:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/init(stringliteral:)"
},
"doc://StreamChat/documentation/StreamChat/Token/isExpired": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "isExpired"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/isExpired",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "isExpired",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/isexpired"
},
"doc://StreamChat/documentation/StreamChat/Token/rawValue": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/rawValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rawValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/rawvalue"
},
"doc://StreamChat/documentation/StreamChat/Token/userId": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "userId"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Token\/userId",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "userId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/token\/userid"
},
"doc://StreamChat/s26ExpressibleByStringLiteralP": {
  "identifier" : "doc:\/\/StreamChat\/s26ExpressibleByStringLiteralP",
  "title" : "Swift.ExpressibleByStringLiteral",
  "type" : "unresolvable"
},
"doc://StreamChat/s33ExpressibleByUnicodeScalarLiteralP": {
  "identifier" : "doc:\/\/StreamChat\/s33ExpressibleByUnicodeScalarLiteralP",
  "title" : "Swift.ExpressibleByUnicodeScalarLiteral",
  "type" : "unresolvable"
},
"doc://StreamChat/s43ExpressibleByExtendedGraphemeClusterLiteralP": {
  "identifier" : "doc:\/\/StreamChat\/s43ExpressibleByExtendedGraphemeClusterLiteralP",
  "title" : "Swift.ExpressibleByExtendedGraphemeClusterLiteral",
  "type" : "unresolvable"
}
}
}