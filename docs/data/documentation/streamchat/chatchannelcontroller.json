{
  "abstract" : [
    {
      "code" : "ChatChannelController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows mutating and observing changes of a specific chat channel.",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat0B17ChannelControllerC",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "class"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ChatChannelController"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ChatChannelController"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Class",
    "symbolKind" : "class",
    "title" : "ChatChannelController"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "class"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ChatChannelController"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "code" : "ChatChannelController",
              "type" : "codeVoice"
            },
            {
              "text" : " objects are lightweight, and they can be used for both, continuous data change observations (like",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "getting new messages in the channel), and for quick channel mutations (like adding a member to a channel).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/DataController"
      ],
      "kind" : "relationships",
      "title" : "Inherits From",
      "type" : "inheritsFrom"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/Controller",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/DataStoreProvider"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class"
      ],
      "title" : "Classes"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areReactionsEnabled",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areReadEventsEnabled",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areRepliesEnabled",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areTypingEventsEnabled",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areUploadsEnabled",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channel",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelChangePublisher",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelListQuery",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelQuery",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/cid",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/client",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/delegate",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/hasLoadedAllPreviousMessages",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/memberEventPublisher",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/messageOrdering",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/messages",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/messagesChangesPublisher",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/observableObject-swift.property",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/statePublisher",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/typingUsersPublisher"
      ],
      "title" : "Instance Properties"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/acceptInvite(message:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/addMembers(userIds:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/createNewMessage(text:pinning:isSilent:attachments:mentionedUserIds:quotedMessageId:extraData:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/deleteChannel(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/disableSlowMode(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/enableSlowMode(cooldownDuration:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/eventsController()",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/freezeChannel(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/hideChannel(clearHistory:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/inviteMembers(userIds:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadNextMessages(after:limit:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadPinnedMessages(pageSize:sorting:pagination:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadPreviousMessages(before:limit:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/markRead(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/muteChannel(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/rejectInvite(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/removeMembers(userIds:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendKeystrokeEvent(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendStartTypingEvent(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendStopTypingEvent(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/showChannel(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/startWatching(isInRecoveryMode:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/stopWatching(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/synchronize(_:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/truncateChannel(skipPush:hardDelete:systemMessage:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/unfreezeChannel(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/unmuteChannel(completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/updateChannel(name:imageURL:team:members:invites:extraData:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/uploadFile(localFileURL:progress:completion:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/uploadImage(localFileURL:progress:completion:)"
      ],
      "title" : "Instance Methods"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/DataStoreProvider-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/chatchannelcontroller"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController": {
  "abstract" : [
    {
      "code" : "ChatChannelController",
      "type" : "codeVoice"
    },
    {
      "text" : " is a controller class which allows mutating and observing changes of a specific chat channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChatChannelController"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChatChannelController"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/DataStoreProvider-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/DataStoreProvider-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "DataStoreProvider Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/datastoreprovider-implementations"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/ObservableObject-swift.class": {
  "abstract" : [
    {
      "text" : "A wrapper object for ",
      "type" : "text"
    },
    {
      "code" : "ChannelListController",
      "type" : "codeVoice"
    },
    {
      "text" : " type which makes it possible to use the controller comfortably in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/ObservableObject-swift.class",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ObservableObject"
    }
  ],
  "role" : "symbol",
  "title" : "ChatChannelController.ObservableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/observableobject-swift.class"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/acceptInvite(message:completion:)": {
  "abstract" : [
    {
      "text" : "Accept Request",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "acceptInvite"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "message"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/acceptInvite(message:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "acceptInvite(message:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/acceptinvite(message:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/addMembers(userIds:completion:)": {
  "abstract" : [
    {
      "text" : "Add users to the channel as members.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "addMembers"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "userIds"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/addMembers(userIds:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "addMembers(userIds:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/addmembers(userids:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/areReactionsEnabled": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel has reactions enabled. Defaults to ",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel doesn’t exist yet.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "areReactionsEnabled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areReactionsEnabled",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "areReactionsEnabled",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/arereactionsenabled"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/areReadEventsEnabled": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel has read events enabled. Defaults to ",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel doesn’t exist yet.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "areReadEventsEnabled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areReadEventsEnabled",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "areReadEventsEnabled",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/arereadeventsenabled"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/areRepliesEnabled": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel has replies enabled. Defaults to ",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel doesn’t exist yet.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "areRepliesEnabled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areRepliesEnabled",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "areRepliesEnabled",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/arerepliesenabled"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/areTypingEventsEnabled": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel has typing events enabled. Defaults to ",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel doesn’t exist yet.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "areTypingEventsEnabled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areTypingEventsEnabled",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "areTypingEventsEnabled",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/aretypingeventsenabled"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/areUploadsEnabled": {
  "abstract" : [
    {
      "code" : "true",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel supports uploading files\/images. Defaults to ",
      "type" : "text"
    },
    {
      "code" : "false",
      "type" : "codeVoice"
    },
    {
      "text" : " if the channel doesn’t exist yet.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "areUploadsEnabled"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/areUploadsEnabled",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "areUploadsEnabled",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/areuploadsenabled"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/channel": {
  "abstract" : [
    {
      "text" : "The channel the controller represents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "channel"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B7ChannelV",
      "text" : "ChatChannel"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channel",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "channel",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/channel"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/channelChangePublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time the channel changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "channelChangePublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat12EntityChangeO",
      "text" : "EntityChange"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B7ChannelV",
      "text" : "ChatChannel"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelChangePublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "channelChangePublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/channelchangepublisher"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/channelListQuery": {
  "abstract" : [
    {
      "text" : "The channel list query the channel is related to.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "It’s ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " when this controller wasn’t created by a ",
      "type" : "text"
    },
    {
      "code" : "ChannelListController",
      "type" : "codeVoice"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "channelListQuery"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat16ChannelListQueryV",
      "text" : "ChannelListQuery"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelListQuery",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "channelListQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/channellistquery"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/channelQuery": {
  "abstract" : [
    {
      "text" : "The ChannelQuery this controller observes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "channelQuery"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat12ChannelQueryV",
      "text" : "ChannelQuery"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/channelQuery",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "channelQuery",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/channelquery"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/cid": {
  "abstract" : [
    {
      "text" : "The identifier of a channel this controller observes.",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "Will be ",
      "type" : "text"
    },
    {
      "code" : "nil",
      "type" : "codeVoice"
    },
    {
      "text" : " when we want to create direct message channel and ",
      "type" : "text"
    },
    {
      "code" : "id",
      "type" : "codeVoice"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "is not yet generated by backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "cid"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat9ChannelIdV",
      "text" : "ChannelId"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/cid",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "cid",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/cid"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/client": {
  "abstract" : [
    {
      "text" : "The ",
      "type" : "text"
    },
    {
      "code" : "ChatClient",
      "type" : "codeVoice"
    },
    {
      "text" : " instance this controller belongs to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "client"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B6ClientC",
      "text" : "ChatClient"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/client",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "client",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/client"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/createNewMessage(text:pinning:isSilent:attachments:mentionedUserIds:quotedMessageId:extraData:completion:)": {
  "abstract" : [
    {
      "text" : "Creates a new message locally and schedules it for send.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "createNewMessage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "text"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "pinning"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat14MessagePinningV",
      "text" : "MessagePinning"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "isSilent"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "attachments"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat20AnyAttachmentPayloadV",
      "text" : "AnyAttachmentPayload"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "mentionedUserIds"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "quotedMessageId"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat9MessageIda",
      "text" : "MessageId"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "extraData"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat7RawJSONO",
      "text" : "RawJSON"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat9MessageIda",
      "text" : "MessageId"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/createNewMessage(text:pinning:isSilent:attachments:mentionedUserIds:quotedMessageId:extraData:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "createNewMessage(text:pinning:isSilent:attachments:mentionedUserIds:quotedMessageId:extraData:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/createnewmessage(text:pinning:issilent:attachments:mentioneduserids:quotedmessageid:extradata:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/delegate": {
  "abstract" : [
    {
      "text" : "Set the delegate of ",
      "type" : "text"
    },
    {
      "code" : "ChannelController",
      "type" : "codeVoice"
    },
    {
      "text" : " to observe the changes in the system.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "delegate"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B25ChannelControllerDelegateP",
      "text" : "ChatChannelControllerDelegate"
    },
    {
      "kind" : "text",
      "text" : "?"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/delegate",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "delegate",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/delegate"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/deleteChannel(completion:)": {
  "abstract" : [
    {
      "text" : "Delete the channel this controller manages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "deleteChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/deleteChannel(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "deleteChannel(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/deletechannel(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/disableSlowMode(completion:)": {
  "abstract" : [
    {
      "text" : "Disables slow mode for the channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "disableSlowMode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/disableSlowMode(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "disableSlowMode(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/disableslowmode(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/enableSlowMode(cooldownDuration:completion:)": {
  "abstract" : [
    {
      "text" : "Enables slow mode for the channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "enableSlowMode"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "cooldownDuration"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/enableSlowMode(cooldownDuration:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "enableSlowMode(cooldownDuration:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/enableslowmode(cooldownduration:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/eventsController()": {
  "abstract" : [
    {
      "text" : "Creates a new ",
      "type" : "text"
    },
    {
      "code" : "ChannelEventsController",
      "type" : "codeVoice"
    },
    {
      "text" : " that can be used to listen to system events",
      "type" : "text"
    },
    {
      "text" : " ",
      "type" : "text"
    },
    {
      "text" : "and for sending custom events into a channel the current controller manages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "eventsController"
    },
    {
      "kind" : "text",
      "text" : "() -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat23ChannelEventsControllerC",
      "text" : "ChannelEventsController"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/eventsController()",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "eventsController()",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/eventscontroller()"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/freezeChannel(completion:)": {
  "abstract" : [
    {
      "text" : "Freezes the channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "freezeChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/freezeChannel(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "freezeChannel(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/freezechannel(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/hasLoadedAllPreviousMessages": {
  "abstract" : [
    {
      "text" : "A Boolean value that returns wether the previous messages have all been loaded or not.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hasLoadedAllPreviousMessages"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/hasLoadedAllPreviousMessages",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hasLoadedAllPreviousMessages",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/hasloadedallpreviousmessages"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/hideChannel(clearHistory:completion:)": {
  "abstract" : [
    {
      "text" : "Hide the channel this controller manages from queryChannels for the user until a message is added.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "hideChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "clearHistory"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/hideChannel(clearHistory:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "hideChannel(clearHistory:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/hidechannel(clearhistory:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/inviteMembers(userIds:completion:)": {
  "abstract" : [
    {
      "text" : "Invite members to a channel. They can then accept or decline the invitation",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "inviteMembers"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "userIds"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/inviteMembers(userIds:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "inviteMembers(userIds:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/invitemembers(userids:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/loadNextMessages(after:limit:completion:)": {
  "abstract" : [
    {
      "text" : "Loads next messages from backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "loadNextMessages"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "after"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat9MessageIda",
      "text" : "MessageId"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "limit"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadNextMessages(after:limit:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "loadNextMessages(after:limit:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/loadnextmessages(after:limit:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/loadPinnedMessages(pageSize:sorting:pagination:completion:)": {
  "abstract" : [
    {
      "text" : "Loads the given number of pinned messages based on pagination parameter in the current channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "loadPinnedMessages"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "pageSize"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "sorting"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat7SortingV",
      "text" : "Sorting"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat24PinnedMessagesSortingKeyV",
      "text" : "PinnedMessagesSortingKey"
    },
    {
      "kind" : "text",
      "text" : ">], "
    },
    {
      "kind" : "externalParam",
      "text" : "pagination"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat24PinnedMessagesPaginationO",
      "text" : "PinnedMessagesPagination"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": ("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B7MessageV",
      "text" : "ChatMessage"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadPinnedMessages(pageSize:sorting:pagination:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "loadPinnedMessages(pageSize:sorting:pagination:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/loadpinnedmessages(pagesize:sorting:pagination:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/loadPreviousMessages(before:limit:completion:)": {
  "abstract" : [
    {
      "text" : "Loads previous messages from backend.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "loadPreviousMessages"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "before"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat9MessageIda",
      "text" : "MessageId"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "limit"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Si",
      "text" : "Int"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/loadPreviousMessages(before:limit:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "loadPreviousMessages(before:limit:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/loadpreviousmessages(before:limit:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/markRead(completion:)": {
  "abstract" : [
    {
      "text" : "Marks the channel as read.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "markRead"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/markRead(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "markRead(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/markread(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/memberEventPublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time member event received.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "memberEventPublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat11MemberEventP",
      "text" : "MemberEvent"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/memberEventPublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "memberEventPublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/membereventpublisher"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/messageOrdering": {
  "abstract" : [
    {
      "text" : "Describes the ordering the messages are presented.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "messageOrdering"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat15MessageOrderingO",
      "text" : "MessageOrdering"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/messageOrdering",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "messageOrdering",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/messageordering"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/messages": {
  "abstract" : [
    {
      "text" : "The messages of the channel the controller represents.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "messages"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat23LazyCachedMapCollectionV",
      "text" : "LazyCachedMapCollection"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B7MessageV",
      "text" : "ChatMessage"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/messages",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "messages",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/messages"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/messagesChangesPublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time the list of the messages matching the query changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "messagesChangesPublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat10ListChangeO",
      "text" : "ListChange"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B7MessageV",
      "text" : "ChatMessage"
    },
    {
      "kind" : "text",
      "text" : ">], "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/messagesChangesPublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "messagesChangesPublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/messageschangespublisher"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/muteChannel(completion:)": {
  "abstract" : [
    {
      "text" : "Mutes the channel this controller manages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "muteChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/muteChannel(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "muteChannel(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/mutechannel(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/observableObject-swift.property": {
  "abstract" : [
    {
      "text" : "A wrapper object that exposes the controller variables in the form of ",
      "type" : "text"
    },
    {
      "code" : "ObservableObject",
      "type" : "codeVoice"
    },
    {
      "text" : " to be used in SwiftUI.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "observableObject"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B17ChannelControllerC",
      "text" : "ChatChannelController"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B17ChannelControllerC16ObservableObjectC",
      "text" : "ObservableObject"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/observableObject-swift.property",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "observableObject",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/observableobject-swift.property"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/rejectInvite(completion:)": {
  "abstract" : [
    {
      "text" : "Reject Request",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rejectInvite"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/rejectInvite(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rejectInvite(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/rejectinvite(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/removeMembers(userIds:completion:)": {
  "abstract" : [
    {
      "text" : "Remove users to the channel as members.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "removeMembers"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "userIds"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/removeMembers(userIds:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "removeMembers(userIds:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/removemembers(userids:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/sendKeystrokeEvent(completion:)": {
  "abstract" : [
    {
      "text" : "Sends the start typing event and schedule a timer to send the stop typing event.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sendKeystrokeEvent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendKeystrokeEvent(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sendKeystrokeEvent(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/sendkeystrokeevent(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/sendStartTypingEvent(completion:)": {
  "abstract" : [
    {
      "text" : "Sends the start typing event.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sendStartTypingEvent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendStartTypingEvent(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sendStartTypingEvent(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/sendstarttypingevent(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/sendStopTypingEvent(completion:)": {
  "abstract" : [
    {
      "text" : "Sends the stop typing event.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "sendStopTypingEvent"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/sendStopTypingEvent(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "sendStopTypingEvent(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/sendstoptypingevent(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/showChannel(completion:)": {
  "abstract" : [
    {
      "text" : "Removes hidden status for the channel this controller manages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "showChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/showChannel(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "showChannel(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/showchannel(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/startWatching(isInRecoveryMode:completion:)": {
  "abstract" : [
    {
      "text" : "Start watching a channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "startWatching"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "isInRecoveryMode"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/startWatching(isInRecoveryMode:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "startWatching(isInRecoveryMode:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/startwatching(isinrecoverymode:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/statePublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time the state of the controller changes.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "statePublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat14DataControllerC",
      "text" : "DataController"
    },
    {
      "kind" : "text",
      "text" : "."
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat14DataControllerC5StateO",
      "text" : "State"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/statePublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "statePublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/statepublisher"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/stopWatching(completion:)": {
  "abstract" : [
    {
      "text" : "Stop watching a channel",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "stopWatching"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/stopWatching(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "stopWatching(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/stopwatching(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/synchronize(_:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "synchronize"
    },
    {
      "kind" : "text",
      "text" : "((("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/synchronize(_:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "synchronize(_:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/synchronize(_:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/truncateChannel(skipPush:hardDelete:systemMessage:completion:)": {
  "abstract" : [
    {
      "text" : "Truncates the channel this controller manages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "truncateChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "skipPush"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "hardDelete"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sb",
      "text" : "Bool"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "systemMessage"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/truncateChannel(skipPush:hardDelete:systemMessage:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "truncateChannel(skipPush:hardDelete:systemMessage:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/truncatechannel(skippush:harddelete:systemmessage:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/typingUsersPublisher": {
  "abstract" : [
    {
      "text" : "A publisher emitting a new value every time typing users change.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "typingUsersPublisher"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:7Combine12AnyPublisherV",
      "text" : "AnyPublisher"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat0B4UserC",
      "text" : "ChatUser"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5NeverO",
      "text" : "Never"
    },
    {
      "kind" : "text",
      "text" : ">"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/typingUsersPublisher",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "typingUsersPublisher",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/typinguserspublisher"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/unfreezeChannel(completion:)": {
  "abstract" : [
    {
      "text" : "Unfreezes the channel.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unfreezeChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/unfreezeChannel(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unfreezeChannel(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/unfreezechannel(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/unmuteChannel(completion:)": {
  "abstract" : [
    {
      "text" : "Unmutes the channel this controller manages.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "unmuteChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/unmuteChannel(completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "unmuteChannel(completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/unmutechannel(completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/updateChannel(name:imageURL:team:members:invites:extraData:completion:)": {
  "abstract" : [
    {
      "text" : "Updated channel with new data.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "updateChannel"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "name"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "imageURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "team"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : "?, "
    },
    {
      "kind" : "externalParam",
      "text" : "members"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "invites"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sh",
      "text" : "Set"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat6UserIda",
      "text" : "UserId"
    },
    {
      "kind" : "text",
      "text" : ">, "
    },
    {
      "kind" : "externalParam",
      "text" : "extraData"
    },
    {
      "kind" : "text",
      "text" : ": ["
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : " : "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat7RawJSONO",
      "text" : "RawJSON"
    },
    {
      "kind" : "text",
      "text" : "], "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : "?) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?)"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/updateChannel(name:imageURL:team:members:invites:extraData:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "updateChannel(name:imageURL:team:members:invites:extraData:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/updatechannel(name:imageurl:team:members:invites:extradata:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/uploadFile(localFileURL:progress:completion:)": {
  "abstract" : [
    {
      "text" : "Uploads the given file to CDN and returns the file URL.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "uploadFile"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "localFileURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "progress"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : "))"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/uploadFile(localFileURL:progress:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "uploadFile(localFileURL:progress:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/uploadfile(localfileurl:progress:completion:)"
},
"doc://StreamChat/documentation/StreamChat/ChatChannelController/uploadImage(localFileURL:progress:completion:)": {
  "abstract" : [
    {
      "text" : "Uploads the given image to CDN and returns the file URL.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "func"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "uploadImage"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "localFileURL"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "progress"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:Sd",
      "text" : "Double"
    },
    {
      "kind" : "text",
      "text" : ") -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : ")?, "
    },
    {
      "kind" : "externalParam",
      "text" : "completion"
    },
    {
      "kind" : "text",
      "text" : ": (("
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s6ResultO",
      "text" : "Result"
    },
    {
      "kind" : "text",
      "text" : "<"
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10Foundation3URLV",
      "text" : "URL"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s5ErrorP",
      "text" : "Error"
    },
    {
      "kind" : "text",
      "text" : ">) -> "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:s4Voida",
      "text" : "Void"
    },
    {
      "kind" : "text",
      "text" : "))"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChatChannelController\/uploadImage(localFileURL:progress:completion:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "uploadImage(localFileURL:progress:completion:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/chatchannelcontroller\/uploadimage(localfileurl:progress:completion:)"
},
"doc://StreamChat/documentation/StreamChat/Controller": {
  "abstract" : [
    {
      "text" : "A protocol to which all controllers conform to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/Controller",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "Controller"
    }
  ],
  "role" : "symbol",
  "title" : "Controller",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/controller"
},
"doc://StreamChat/documentation/StreamChat/DataController": {
  "abstract" : [
    {
      "text" : "The base class for controllers which represent and control a data entity. Not meant to be used directly.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "class"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataController"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/DataController",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataController"
    }
  ],
  "role" : "symbol",
  "title" : "DataController",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datacontroller"
},
"doc://StreamChat/documentation/StreamChat/DataStoreProvider": {
  "abstract" : [
    {
      "text" : "Types conforming to this protocol automatically exposes public ",
      "type" : "text"
    },
    {
      "code" : "dataStore",
      "type" : "codeVoice"
    },
    {
      "text" : " variable.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/DataStoreProvider",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "DataStoreProvider"
    }
  ],
  "role" : "symbol",
  "title" : "DataStoreProvider",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/datastoreprovider"
}
}
}