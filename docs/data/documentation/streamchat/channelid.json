{
  "abstract" : [
    {
      "text" : "A type representing a unique identifier of a ",
      "type" : "text"
    },
    {
      "code" : "ChatChannel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/StreamChat\/documentation\/StreamChat"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId"
  },
  "kind" : "symbol",
  "metadata" : {
    "externalID" : "s:10StreamChat9ChannelIdV",
    "fragments" : [
      {
        "kind" : "keyword",
        "text" : "struct"
      },
      {
        "kind" : "text",
        "text" : " "
      },
      {
        "kind" : "identifier",
        "text" : "ChannelId"
      }
    ],
    "modules" : [
      {
        "name" : "StreamChat"
      }
    ],
    "navigatorTitle" : [
      {
        "kind" : "identifier",
        "text" : "ChannelId"
      }
    ],
    "role" : "symbol",
    "roleHeading" : "Structure",
    "symbolKind" : "struct",
    "title" : "ChannelId"
  },
  "primaryContentSections" : [
    {
      "declarations" : [
        {
          "languages" : [
            "swift"
          ],
          "platforms" : [
            "macOS"
          ],
          "tokens" : [
            {
              "kind" : "keyword",
              "text" : "struct"
            },
            {
              "kind" : "text",
              "text" : " "
            },
            {
              "kind" : "identifier",
              "text" : "ChannelId"
            }
          ]
        }
      ],
      "kind" : "declarations"
    },
    {
      "content" : [
        {
          "anchor" : "overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "It reflects channelâ€™s type and a unique id.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "relationshipsSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/FilterValue",
        "doc:\/\/StreamChat\/s23CustomStringConvertibleP",
        "doc:\/\/StreamChat\/Se",
        "doc:\/\/StreamChat\/SE",
        "doc:\/\/StreamChat\/SQ",
        "doc:\/\/StreamChat\/SH"
      ],
      "kind" : "relationships",
      "title" : "Conforms To",
      "type" : "conformsTo"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 2,
    "patch" : 0
  },
  "sections" : [

  ],
  "topicSections" : [
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/init(cid:)",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/init(type:id:)"
      ],
      "title" : "Initializers"
    },
    {
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/description",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/id",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/rawValue",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/type"
      ],
      "title" : "Instance Properties"
    },
    {
      "generated" : true,
      "identifiers" : [
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/Decodable-Implementations",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/Encodable-Implementations",
        "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/Equatable-Implementations"
      ],
      "title" : "Default Implementations"
    }
  ],
  "variants" : [
    {
      "paths" : [
        "\/documentation\/streamchat\/channelid"
      ],
      "traits" : [
        {
          "interfaceLanguage" : "swift"
        }
      ]
    }
  ]
, 
"references": {
"doc://StreamChat/SE": {
  "identifier" : "doc:\/\/StreamChat\/SE",
  "title" : "Swift.Encodable",
  "type" : "unresolvable"
},
"doc://StreamChat/SH": {
  "identifier" : "doc:\/\/StreamChat\/SH",
  "title" : "Swift.Hashable",
  "type" : "unresolvable"
},
"doc://StreamChat/SQ": {
  "identifier" : "doc:\/\/StreamChat\/SQ",
  "title" : "Swift.Equatable",
  "type" : "unresolvable"
},
"doc://StreamChat/Se": {
  "identifier" : "doc:\/\/StreamChat\/Se",
  "title" : "Swift.Decodable",
  "type" : "unresolvable"
},
"doc://StreamChat/documentation/StreamChat": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat",
  "kind" : "symbol",
  "role" : "collection",
  "title" : "StreamChat",
  "type" : "topic",
  "url" : "\/documentation\/streamchat"
},
"doc://StreamChat/documentation/StreamChat/ChannelId": {
  "abstract" : [
    {
      "text" : "A type representing a unique identifier of a ",
      "type" : "text"
    },
    {
      "code" : "ChatChannel",
      "type" : "codeVoice"
    },
    {
      "text" : ".",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "struct"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "ChannelId"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "ChannelId"
    }
  ],
  "role" : "symbol",
  "title" : "ChannelId",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/Decodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/Decodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Decodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/decodable-implementations"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/Encodable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/Encodable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Encodable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/encodable-implementations"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/Equatable-Implementations": {
  "abstract" : [

  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/Equatable-Implementations",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Equatable Implementations",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/equatable-implementations"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/description": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "description"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/description",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "description",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/description"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/id": {
  "abstract" : [
    {
      "text" : "The id of the channel without the encoded type information.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/id",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "id",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/id"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/init(cid:)": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "cid"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ") "
    },
    {
      "kind" : "keyword",
      "text" : "throws"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/init(cid:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(cid:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/init(cid:)"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/init(type:id:)": {
  "abstract" : [
    {
      "text" : "Creates a new ",
      "type" : "text"
    },
    {
      "code" : "ChannelId",
      "type" : "codeVoice"
    },
    {
      "text" : " value.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "identifier",
      "text" : "init"
    },
    {
      "kind" : "text",
      "text" : "("
    },
    {
      "kind" : "externalParam",
      "text" : "type"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat11ChannelTypeO",
      "text" : "ChannelType"
    },
    {
      "kind" : "text",
      "text" : ", "
    },
    {
      "kind" : "externalParam",
      "text" : "id"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    },
    {
      "kind" : "text",
      "text" : ")"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/init(type:id:)",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "init(type:id:)",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/init(type:id:)"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/rawValue": {
  "abstract" : [

  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "let"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "rawValue"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:SS",
      "text" : "String"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/rawValue",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "rawValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/rawvalue"
},
"doc://StreamChat/documentation/StreamChat/ChannelId/type": {
  "abstract" : [
    {
      "text" : "The type of the channel the id belongs to.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "var"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "type"
    },
    {
      "kind" : "text",
      "text" : ": "
    },
    {
      "kind" : "typeIdentifier",
      "preciseIdentifier" : "s:10StreamChat11ChannelTypeO",
      "text" : "ChannelType"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/ChannelId\/type",
  "kind" : "symbol",
  "role" : "symbol",
  "title" : "type",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/channelid\/type"
},
"doc://StreamChat/documentation/StreamChat/FilterValue": {
  "abstract" : [
    {
      "text" : "A protocol to which all values that can be used as ",
      "type" : "text"
    },
    {
      "code" : "Filter",
      "type" : "codeVoice"
    },
    {
      "text" : " values conform.",
      "type" : "text"
    }
  ],
  "fragments" : [
    {
      "kind" : "keyword",
      "text" : "protocol"
    },
    {
      "kind" : "text",
      "text" : " "
    },
    {
      "kind" : "identifier",
      "text" : "FilterValue"
    }
  ],
  "identifier" : "doc:\/\/StreamChat\/documentation\/StreamChat\/FilterValue",
  "kind" : "symbol",
  "navigatorTitle" : [
    {
      "kind" : "identifier",
      "text" : "FilterValue"
    }
  ],
  "role" : "symbol",
  "title" : "FilterValue",
  "type" : "topic",
  "url" : "\/documentation\/streamchat\/filtervalue"
},
"doc://StreamChat/s23CustomStringConvertibleP": {
  "identifier" : "doc:\/\/StreamChat\/s23CustomStringConvertibleP",
  "title" : "Swift.CustomStringConvertible",
  "type" : "unresolvable"
}
}
}